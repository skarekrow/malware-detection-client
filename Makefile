# Creates virtualenvs for python 2.7 & 3.6, if those versions of python exist on the system
sudo_wrapper = sudoclient
venv27:
	if uname -r | grep -q '\.el7'; then \
		test -d venv27 || virtualenv venv27 --python $$(which python2.7); \
	else \
		test -d venv27 || virtualenv-3 venv27 --python $$(which python2.7); \
	fi
	sed 's/venv36/venv27/g' $(sudo_wrapper) > venv27/bin/$(sudo_wrapper) && chmod 755 venv27/bin/$(sudo_wrapper)
	./venv27/bin/python -m pip install -e .[dev]

venv36:
	if uname -r | grep -q '\.el7'; then \
		test -d venv36 || virtualenv venv36 --python $$(which python3.6); \
	else \
		test -d venv36 || virtualenv-3 venv36 --python $$(which python3.6); \
	fi
	sed 's/venv27/venv36/g' $(sudo_wrapper) > venv36/bin/$(sudo_wrapper) && chmod 755 venv36/bin/$(sudo_wrapper)
	./venv36/bin/python -m pip install -e .[dev]

# Causes venv27 & venv36 to re-run `pip install -e .` each time, otherwise it would be skipped after initial run
.PHONY: venv27 venv36


# Create the RHEL7 & RHEL8 rpms
# Run this outside of a virtual env and on the target RHEL machine (ie RHEL7 or RHEL8)
# Modifies setup.cfg depending on whether its a RHEL7 or RHEL8 machine
rpm:
	if uname -r | grep -q '\.el7'; then \
		sed  -i -e 's/\.el8/.el7/' -e 's/python3-/python-/' setup.cfg; \
		python setup.py bdist_rpm; \
	else \
		sed  -i -e 's/\.el7/.el8/' -e 's/python-/python3-/' setup.cfg; \
		python3 setup.py bdist_rpm; \
	fi


# Run various tests
test: clean-test
	flake8 --ignore E501 --filename "*" src/
	python -B -m pytest -v tests

test-client: clean-test
	python -B -m pytest -v tests/test_malware_detection_client.py

test-parse: clean-test
	python -B -m pytest -v tests/test_parse_scan_output.py

test-net: clean-test
	python -B -m pytest -v tests/test_network_functions.py

tests: test


# Perform various file/directory cleanups
# Clean all returns the repo back to initial state (removes venv and test cache dirs too)
clean-all: clean clean-venv
	rm -rf .pytest_cache
	rm -rf .tox

clean:
	rm -rf build dist src/*.egg-info
	find . -name '*.pyc' -delete
	find . -type d -name '__pycache__' -delete

clean-tests:
	find tests -name '*.pyc' -delete
	find tests -type d -name '__pycache__' -delete

clean-test: clean-tests

clean-venv:
	rm -rf venv*
