# Where values are provided for the options, these are the defaults

[client]
# Client log level.  Valid options are DEBUG, INFO, WARNING, ERROR, CRITICAL
#log_level=INFO

# Scan the files on this system?
#scan_filesystem=True

# Scan the processes on this system?
#scan_processes=True

# Add extra metadata to each scan match, eg file type, file md5sum, matching line numbers, process name
#metadata=True

# Location of the rules.  Can be any of:
# - the name of a file on the local filesystem containing rules
# - a URL for an endpoint to download a list of rules via GraphQL
# - a URL to download a file containing rules
#rules_location=/tmp/malware_detection_rules.yar
#rules_location=http://127.0.0.1:3000/api/malware-detection/v1/graphql
rules_location=https://cert.console.redhat.com/api/malware-detection/v1/signatures.yar

# A GraphQL endpoint for sending the results of a scan
results_location=https://cert.console.redhat.com/api/malware-detection/v1/graphql

# Limit the number of string matches uploaded per rule, esp if there are a lot of matches for a file/PID
#string_match_limit=10

# Comma separated list of rules to exclude from the scan, eg SpammyRule, IrrelevantRule, just_because_rule
#exclude_rules=

# URL for your proxy
#proxy_url=


[yara]
# Specific location of the yara binary file.  Autodetected if not specified.  Example: /usr/local/bin/yara
#location=

# Abort a particular scan if it takes longer than scan_timeout seconds
#scan_timeout=3600

# Nice value to run yara as
#nice=19

# Number of CPU threads yara will use
#cpu_thread_limit=2


[auth]
# Subscription-manager certificate and key to use for authenticating to console.redhat.com
cert=/etc/pki/consumer/cert.pem
key=/etc/pki/consumer/key.pem
