#!/usr/libexec/platform-python
import argparse
from malware_detection_client import MalwareDetectionClient


def get_args():
    # Certain values may be supplied as command line arguments to MalwareDetectionClient
    p = argparse.ArgumentParser(description="Arguments will override corresponding values from the config files")
    p.add_argument('-r', '--rules', help='Location of the rules, ie HTTP URL or local file', default='',
                   metavar='RULES_LOCATION')
    p.add_argument('-u', '--upload', help='Upload results to the specified URL', default='',
                   metavar='UPLOAD_LOCATION')
    p.add_argument('-s', '--scan', help='Scan only this file, dir or pid', metavar='FILE|DIR|PID')
    p.add_argument('-c', '--conf', help='Specify the configuration file location (default: /etc/malware-detection-client/malware-detection-client.conf)',
                   default='/etc/malware-detection-client/malware-detection-client.conf', metavar='CONF_FILE')
    p.add_argument('-S', '--save-rules', help='Save the downloaded rules to this file', metavar='SAVED_RULES_FILE')
    p.add_argument('-C', '--create', action='store_true', help='Create a default configuration file')
    p.add_argument('-n', '--no-upload', action='store_true', help="Skip uploading scan results at the end")
    p.add_argument('-d', '--debug', action='store_true', help='Enable debug level logging')
    return p.parse_args()


def main():
    args = get_args()
    mdc = MalwareDetectionClient(rules_location=args.rules,
                                 results_url=args.upload,
                                 scan_entity=args.scan,
                                 conf_file=args.conf,
                                 saved_rules_file=args.save_rules,
                                 create_conf=args.create,
                                 no_upload=args.no_upload,
                                 debug=args.debug)
    mdc.run()


if __name__ == "__main__":
    main()
